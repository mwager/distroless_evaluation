{
	"results": [
		{
			"id": "sha256:e037c85776161a903e6132dbf49c38aca7c75bf311c742e4c39a8ce37d2baf0f",
			"name": "chisel-go:latest",
			"distro": "",
			"collections": [
				"All"
			],
			"applications": [
				{
					"name": "go",
					"version": "1.18.1",
					"path": "/https"
				}
			],
			"compliances": [
				{
					"id": 41,
					"title": "(CIS_Docker_v1.5.0 - 4.1) Image should be created with a non-root user",
					"severity": "high",
					"description": "It is a good practice to run the container as a non-root user, if possible. Though user\nnamespace mapping is now available, if a user is already defined in the container image, the\ncontainer is run as that user by default and specific user namespace remapping is not\nrequired",
					"layerTime": "1970-01-01T00:00:00Z",
					"category": "Docker"
				}
			],
			"complianceDistribution": {
				"critical": 0,
				"high": 1,
				"medium": 0,
				"low": 0,
				"total": 1
			},
			"complianceScanPassed": true,
			"vulnerabilities": [
				{
					"id": "CVE-2023-29405",
					"status": "fixed in 1.20.5, 1.19.10",
					"cvss": 9.8,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
					"description": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \\\"go get\\\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \\\"#cgo LDFLAGS\\\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
					"severity": "critical",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2023-29405",
					"riskFactors": [
						"Attack complexity: low",
						"Attack vector: network",
						"Critical severity",
						"DoS - High",
						"Has fix",
						"Recent vulnerability",
						"Remote execution"
					],
					"impactedVersions": [
						"\u003c1.19.10"
					],
					"publishedDate": "2023-06-08T21:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2023-06-16T15:00:09Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2023-29404",
					"status": "fixed in 1.20.5, 1.19.10",
					"cvss": 9.8,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
					"description": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \\\"go get\\\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \\\"#cgo LDFLAGS\\\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
					"severity": "critical",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2023-29404",
					"riskFactors": [
						"Attack complexity: low",
						"Attack vector: network",
						"Critical severity",
						"DoS - High",
						"Has fix",
						"Recent vulnerability",
						"Remote execution"
					],
					"impactedVersions": [
						"\u003c1.19.10"
					],
					"publishedDate": "2023-06-08T21:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2023-06-16T15:00:09Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2023-29402",
					"status": "fixed in 1.20.5, 1.19.10",
					"cvss": 9.8,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
					"description": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \\\"go get\\\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
					"severity": "critical",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2023-29402",
					"riskFactors": [
						"Attack vector: network",
						"Critical severity",
						"DoS - High",
						"Has fix",
						"Recent vulnerability",
						"Attack complexity: low"
					],
					"impactedVersions": [
						"\u003c1.19.10"
					],
					"publishedDate": "2023-06-08T21:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2023-06-16T19:03:34Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2023-24540",
					"status": "fixed in 1.20.4, 1.19.9",
					"cvss": 9.8,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
					"description": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \\\"\\\\t\\n\\\\f\\r\\\\u0020\\\\u2028\\\\u2029\\\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
					"severity": "critical",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2023-24540",
					"riskFactors": [
						"Attack vector: network",
						"Critical severity",
						"DoS - High",
						"Has fix",
						"Recent vulnerability",
						"Attack complexity: low"
					],
					"impactedVersions": [
						"\u003c1.19.9"
					],
					"publishedDate": "2023-05-11T16:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2023-05-22T22:14:11Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2023-24538",
					"status": "fixed in 1.20.3, 1.19.8",
					"cvss": 9.8,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
					"description": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \\\"var a = {{.}}\\\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
					"severity": "critical",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2023-24538",
					"riskFactors": [
						"Attack vector: network",
						"Critical severity",
						"DoS - High",
						"Has fix",
						"Recent vulnerability",
						"Attack complexity: low"
					],
					"impactedVersions": [
						"\u003c1.19.8"
					],
					"publishedDate": "2023-04-06T16:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2023-04-17T20:33:04Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2023-29403",
					"status": "fixed in 1.20.5, 1.19.10",
					"cvss": 7.8,
					"vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
					"description": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2023-29403",
					"riskFactors": [
						"Has fix",
						"High severity",
						"Recent vulnerability",
						"Attack complexity: low",
						"DoS - High"
					],
					"impactedVersions": [
						"\u003c1.19.10"
					],
					"publishedDate": "2023-06-08T21:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2023-06-16T07:04:52Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2022-30580",
					"status": "fixed in 1.18.3, 1.17.11",
					"cvss": 7.8,
					"vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
					"description": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \\\"..com\\\" or \\\"..exe\\\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2022-30580",
					"riskFactors": [
						"Attack complexity: low",
						"DoS - High",
						"Has fix",
						"High severity"
					],
					"impactedVersions": [
						"\u003c1.18.3,1.18",
						"\u003e=1.18.0,1.18"
					],
					"publishedDate": "2022-08-10T20:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2022-08-10T20:15:00Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2023-39533",
					"status": "fixed in 1.20.7, 1.19.12",
					"cvss": 7.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
					"description": "go-libp2p is the Go implementation of the libp2p Networking Stack. Prior to versions 0.27.8, 0.28.2, and 0.29.1 malicious peer can use large RSA keys to run a resource exhaustion attack \u0026 force a node to spend time doing signature verification of the large key. This vulnerability is present in the core/crypto module of go-libp2p and can occur during the Noise handshake and the libp2p x509 extension verification step. To prevent this attack, go-libp2p versions 0.27.8, 0.28.2, and 0.29.1 restrict RSA keys to \u003c= 8192 bits. To protect one\\'s application, it is necessary to update to these patch releases and to use the updated Go compiler in 1.20.7 or 1.19.12. There are no known workarounds for this issue.",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2023-39533",
					"riskFactors": [
						"Recent vulnerability",
						"Attack complexity: low",
						"Attack vector: network",
						"DoS - High",
						"Has fix",
						"High severity"
					],
					"impactedVersions": [
						"\u003c1.19.12"
					],
					"publishedDate": "2023-08-09T13:18:18Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2023-08-15T23:21:13Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2023-24537",
					"status": "fixed in 1.20.3, 1.19.8",
					"cvss": 7.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
					"description": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2023-24537",
					"riskFactors": [
						"High severity",
						"Recent vulnerability",
						"Attack complexity: low",
						"Attack vector: network",
						"DoS - High",
						"Has fix"
					],
					"impactedVersions": [
						"\u003c1.19.8"
					],
					"publishedDate": "2023-04-06T16:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2023-04-13T20:42:14Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2023-24536",
					"status": "fixed in 1.20.3, 1.19.8",
					"cvss": 7.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
					"description": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variabl",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2023-24536",
					"riskFactors": [
						"Attack vector: network",
						"DoS - High",
						"Has fix",
						"High severity",
						"Recent vulnerability",
						"Attack complexity: low"
					],
					"impactedVersions": [
						"\u003c1.19.8"
					],
					"publishedDate": "2023-04-06T16:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2023-04-17T20:33:04Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2023-24534",
					"status": "fixed in 1.20.3, 1.19.8",
					"cvss": 7.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
					"description": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2023-24534",
					"riskFactors": [
						"Attack complexity: low",
						"Attack vector: network",
						"DoS - High",
						"Has fix",
						"High severity",
						"Recent vulnerability"
					],
					"impactedVersions": [
						"\u003c1.19.8"
					],
					"publishedDate": "2023-04-06T16:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2023-04-18T21:34:53Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2022-41725",
					"status": "fixed in 1.20.1, 1.19.6",
					"cvss": 7.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
					"description": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \\\"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\\\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most on",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2022-41725",
					"riskFactors": [
						"Has fix",
						"High severity",
						"Attack complexity: low",
						"Attack vector: network",
						"DoS - High"
					],
					"impactedVersions": [
						"\u003c1.19.6"
					],
					"publishedDate": "2023-02-28T18:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2023-03-10T07:13:47Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2022-41724",
					"status": "fixed in 1.20.1, 1.19.6",
					"cvss": 7.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
					"description": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2022-41724",
					"riskFactors": [
						"Attack complexity: low",
						"Attack vector: network",
						"DoS - High",
						"Has fix",
						"High severity"
					],
					"impactedVersions": [
						"\u003c1.19.6"
					],
					"publishedDate": "2023-02-28T18:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2023-03-10T07:13:47Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2022-41723",
					"status": "fixed in 1.20.1, 1.19.6",
					"cvss": 7.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
					"description": "A maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests.",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2022-41723",
					"riskFactors": [
						"Has fix",
						"High severity",
						"Attack complexity: low",
						"Attack vector: network",
						"DoS - High"
					],
					"impactedVersions": [
						"\u003c1.19.6"
					],
					"publishedDate": "2023-02-28T18:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2023-03-09T19:12:17Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2022-41716",
					"status": "fixed in 1.19.3, 1.18.8",
					"cvss": 7.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
					"description": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \\\"A=B\\\\x00C=D\\\" sets the variables \\\"A=B\\\" and \\\"C=D\\\".",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2022-41716",
					"riskFactors": [
						"Has fix",
						"High severity",
						"Attack complexity: low",
						"Attack vector: network"
					],
					"impactedVersions": [
						"\u003c1.18.8"
					],
					"publishedDate": "2022-11-02T16:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2022-11-03T00:00:00Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2022-41715",
					"status": "fixed in 1.19.2, 1.18.7",
					"cvss": 7.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
					"description": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2022-41715",
					"riskFactors": [
						"DoS - High",
						"Has fix",
						"High severity",
						"Attack complexity: low",
						"Attack vector: network"
					],
					"impactedVersions": [
						"\u003c1.18.7"
					],
					"publishedDate": "2022-10-14T15:16:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2022-10-14T15:16:00Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2022-32189",
					"status": "fixed in 1.18.5, 1.17.13",
					"cvss": 7.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
					"description": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2022-32189",
					"riskFactors": [
						"Attack vector: network",
						"DoS - High",
						"Has fix",
						"High severity",
						"Attack complexity: low"
					],
					"impactedVersions": [
						"\u003c1.18.5,1.18",
						"\u003e=1.18.0,1.18"
					],
					"publishedDate": "2022-08-10T20:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2022-08-10T20:15:00Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2022-30635",
					"status": "fixed in 1.18.4, 1.17.12",
					"cvss": 7.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
					"description": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2022-30635",
					"riskFactors": [
						"Attack complexity: low",
						"Attack vector: network",
						"DoS - High",
						"Has fix",
						"High severity"
					],
					"impactedVersions": [
						"\u003e=1.18.0,1.18",
						"\u003c1.18.4,1.18"
					],
					"publishedDate": "2022-08-10T20:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2022-08-10T20:15:00Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2022-30633",
					"status": "fixed in 1.18.4, 1.17.12",
					"cvss": 7.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
					"description": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the \\'any\\' field tag.",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2022-30633",
					"riskFactors": [
						"High severity",
						"Attack complexity: low",
						"Attack vector: network",
						"DoS - High",
						"Has fix"
					],
					"impactedVersions": [
						"\u003c1.18.4,1.18",
						"\u003e=1.18.0,1.18"
					],
					"publishedDate": "2022-08-10T20:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2022-08-10T20:15:00Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2022-30632",
					"status": "fixed in 1.18.4, 1.17.12",
					"cvss": 7.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
					"description": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2022-30632",
					"riskFactors": [
						"Attack vector: network",
						"DoS - High",
						"Has fix",
						"High severity",
						"Attack complexity: low"
					],
					"impactedVersions": [
						"\u003c1.18.4,1.18",
						"\u003e=1.18.0,1.18"
					],
					"publishedDate": "2022-08-10T20:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2022-08-10T20:15:00Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2022-30631",
					"status": "fixed in 1.18.4, 1.17.12",
					"cvss": 7.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
					"description": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2022-30631",
					"riskFactors": [
						"High severity",
						"Attack complexity: low",
						"Attack vector: network",
						"DoS - High",
						"Has fix"
					],
					"impactedVersions": [
						"\u003c1.18.4,1.18",
						"\u003e=1.18.0,1.18"
					],
					"publishedDate": "2022-08-10T20:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2022-08-10T20:15:00Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2022-30630",
					"status": "fixed in 1.18.4, 1.17.12",
					"cvss": 7.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
					"description": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2022-30630",
					"riskFactors": [
						"DoS - High",
						"Has fix",
						"High severity",
						"Attack complexity: low",
						"Attack vector: network"
					],
					"impactedVersions": [
						"\u003c1.18.4,1.18",
						"\u003e=1.18.0,1.18"
					],
					"publishedDate": "2022-08-10T20:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2022-08-10T20:15:00Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2022-2880",
					"status": "fixed in 1.19.2, 1.18.7",
					"cvss": 7.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
					"description": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request\\'s Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2022-2880",
					"riskFactors": [
						"Attack complexity: low",
						"Attack vector: network",
						"Has fix",
						"High severity"
					],
					"impactedVersions": [
						"\u003c1.18.7"
					],
					"publishedDate": "2022-10-14T15:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2022-10-14T15:15:00Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2022-2879",
					"status": "fixed in 1.19.2, 1.18.7",
					"cvss": 7.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
					"description": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2022-2879",
					"riskFactors": [
						"Attack complexity: low",
						"Attack vector: network",
						"DoS - High",
						"Has fix",
						"High severity"
					],
					"impactedVersions": [
						"\u003c1.18.7"
					],
					"publishedDate": "2022-10-14T15:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2022-10-14T15:15:00Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2022-28131",
					"status": "fixed in 1.18.4, 1.17.12",
					"cvss": 7.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
					"description": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2022-28131",
					"riskFactors": [
						"Attack complexity: low",
						"Attack vector: network",
						"DoS - High",
						"Has fix",
						"High severity"
					],
					"impactedVersions": [
						"\u003c1.18.4,1.18",
						"\u003e=1.18.0,1.18"
					],
					"publishedDate": "2022-08-10T20:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2022-08-10T20:15:00Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2022-27664",
					"status": "fixed in 1.19.1, 1.18.6",
					"cvss": 7.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
					"description": "In net/http in Go before 1.18.6 and 1.19.x before 1.19.1, attackers can cause a denial of service because an HTTP/2 connection can hang during closing if shutdown were preempted by a fatal error.",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2022-27664",
					"riskFactors": [
						"High severity",
						"Attack complexity: low",
						"Attack vector: network",
						"DoS - High",
						"Has fix"
					],
					"impactedVersions": [
						"\u003c1.18.6"
					],
					"publishedDate": "2022-09-06T18:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2022-09-06T18:15:00Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2023-29400",
					"status": "fixed in 1.20.4, 1.19.9",
					"cvss": 7.3,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
					"description": "Templates containing actions in unquoted HTML attributes (e.g. \\\"attr={{.}}\\\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2023-29400",
					"riskFactors": [
						"Has fix",
						"High severity",
						"Recent vulnerability",
						"Attack complexity: low",
						"Attack vector: network",
						"DoS - Low"
					],
					"impactedVersions": [
						"\u003c1.19.9"
					],
					"publishedDate": "2023-05-11T16:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2023-05-22T22:14:11Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2023-24539",
					"status": "fixed in 1.20.4, 1.19.9",
					"cvss": 7.3,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
					"description": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a \\'/\\' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
					"severity": "high",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2023-24539",
					"riskFactors": [
						"Attack vector: network",
						"DoS - Low",
						"Has fix",
						"High severity",
						"Recent vulnerability",
						"Attack complexity: low"
					],
					"impactedVersions": [
						"\u003c1.19.9"
					],
					"publishedDate": "2023-05-11T16:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2023-05-22T22:14:11Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2023-29406",
					"status": "fixed in 1.20.6, 1.19.11",
					"cvss": 6.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N",
					"description": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
					"severity": "medium",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2023-29406",
					"riskFactors": [
						"Attack complexity: low",
						"Attack vector: network",
						"Has fix",
						"Medium severity",
						"Recent vulnerability"
					],
					"impactedVersions": [
						"\u003c1.19.11"
					],
					"publishedDate": "2023-07-11T20:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2023-07-19T21:03:41Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2022-32148",
					"status": "fixed in 1.18.4, 1.17.12",
					"cvss": 6.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
					"description": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
					"severity": "medium",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2022-32148",
					"riskFactors": [
						"Attack complexity: low",
						"Attack vector: network",
						"Has fix",
						"Medium severity"
					],
					"impactedVersions": [
						"\u003c1.18.4,1.18",
						"\u003e=1.18.0,1.18"
					],
					"publishedDate": "2022-08-10T20:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2022-08-10T20:15:00Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2022-1705",
					"status": "fixed in 1.18.4, 1.17.12",
					"cvss": 6.5,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
					"description": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
					"severity": "medium",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2022-1705",
					"riskFactors": [
						"Attack complexity: low",
						"Attack vector: network",
						"Has fix",
						"Medium severity"
					],
					"impactedVersions": [
						"\u003e=1.18.0,1.18",
						"\u003c1.18.4,1.18"
					],
					"publishedDate": "2022-08-10T20:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2022-08-10T20:15:00Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2023-39319",
					"status": "fixed in 1.21.1, 1.20.8",
					"cvss": 6.1,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
					"description": "The html/template package does not apply the proper rules for handling occurrences of \\\"\u003cscript\\\", \\\"\u003c!--\\\", and \\\"\u003c/script\\\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
					"severity": "medium",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2023-39319",
					"riskFactors": [
						"Attack vector: network",
						"Has fix",
						"Medium severity",
						"Recent vulnerability",
						"Attack complexity: low"
					],
					"impactedVersions": [
						"\u003c1.20.8"
					],
					"publishedDate": "2023-09-08T17:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2023-09-13T16:02:30Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2023-39318",
					"status": "fixed in 1.21.1, 1.20.8",
					"cvss": 6.1,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
					"description": "The html/template package does not properly handle HTML-like \\\"\\\" comment tokens, nor hashbang \\\"#!\\\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
					"severity": "medium",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2023-39318",
					"riskFactors": [
						"Attack complexity: low",
						"Attack vector: network",
						"Has fix",
						"Medium severity",
						"Recent vulnerability"
					],
					"impactedVersions": [
						"\u003c1.20.8"
					],
					"publishedDate": "2023-09-08T17:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2023-09-13T16:02:30Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2022-1962",
					"status": "fixed in 1.18.4, 1.17.12",
					"cvss": 5.5,
					"vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
					"description": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
					"severity": "medium",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2022-1962",
					"riskFactors": [
						"Attack complexity: low",
						"DoS - High",
						"Has fix",
						"Medium severity"
					],
					"impactedVersions": [
						"\u003c1.18.4,1.18",
						"\u003e=1.18.0,1.18"
					],
					"publishedDate": "2022-08-10T20:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2022-08-10T20:15:00Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2023-29409",
					"status": "fixed in 1.20.7, 1.19.12",
					"cvss": 5.3,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
					"description": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
					"severity": "medium",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2023-29409",
					"riskFactors": [
						"Has fix",
						"Medium severity",
						"Recent vulnerability",
						"Attack complexity: low",
						"Attack vector: network",
						"DoS - Low"
					],
					"impactedVersions": [
						"\u003c1.19.12"
					],
					"publishedDate": "2023-08-02T20:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2023-08-11T23:26:24Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2023-24532",
					"status": "fixed in 1.20.2, 1.19.7",
					"cvss": 5.3,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
					"description": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
					"severity": "medium",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2023-24532",
					"riskFactors": [
						"Medium severity",
						"Attack complexity: low",
						"Attack vector: network",
						"Has fix"
					],
					"impactedVersions": [
						"\u003c1.19.7"
					],
					"publishedDate": "2023-03-08T20:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2023-03-15T19:13:34Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2022-41717",
					"status": "fixed in 1.19.4, 1.18.9",
					"cvss": 5.3,
					"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
					"description": "An attacker can cause excessive memory growth in a Go server accepting HTTP/2 requests. HTTP/2 server connections contain a cache of HTTP header keys sent by the client. While the total number of entries in this cache is capped, an attacker sending very large keys can cause the server to allocate approximately 64 MiB per open connection.",
					"severity": "medium",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2022-41717",
					"riskFactors": [
						"Attack vector: network",
						"DoS - Low",
						"Has fix",
						"Medium severity",
						"Attack complexity: low"
					],
					"impactedVersions": [
						"\u003c1.18.9"
					],
					"publishedDate": "2022-12-08T20:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2022-12-12T20:49:47Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"id": "CVE-2022-30629",
					"status": "fixed in 1.18.3, 1.17.11",
					"cvss": 3.1,
					"vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N",
					"description": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
					"severity": "low",
					"packageName": "go",
					"packageVersion": "1.18.1",
					"link": "https://nvd.nist.gov/vuln/detail/CVE-2022-30629",
					"riskFactors": [
						"Attack vector: network",
						"Has fix"
					],
					"impactedVersions": [
						"\u003e=1.18.0,1.18",
						"\u003c1.18.3,1.18"
					],
					"publishedDate": "2022-08-10T20:15:00Z",
					"discoveredDate": "2023-09-26T03:39:30Z",
					"fixDate": "2022-08-10T20:15:00Z",
					"layerTime": "2023-09-14T11:51:29Z",
					"packagePath": "/https",
					"layerInstruction": "COPY /go/src/app/https / # buildkit"
				}
			],
			"vulnerabilityDistribution": {
				"critical": 5,
				"high": 23,
				"medium": 9,
				"low": 1,
				"total": 38
			},
			"vulnerabilityScanPassed": false,
			"history": [
				{
					"created": "2023-09-14T11:50:45Z",
					"instruction": "COPY /staging/ / # buildkit"
				},
				{
					"created": "2023-09-14T11:51:29Z",
					"instruction": "COPY /go/src/app/https / # buildkit"
				},
				{
					"created": "2023-09-14T11:51:29Z",
					"instruction": "CMD [\"/https\"]"
				},
				{
					"created": "2023-09-14T11:51:29Z",
					"instruction": "CMD [\"/bin/sh\" \"-c\" \"echo \\\"Hello world\\\"\"]"
				},
				{
					"created": "2023-09-14T11:51:29Z",
					"instruction": "CMD [\"/bin/sh\" \"-c\" \"echo \\\"Hello world\\\"\"]"
				},
				{
					"created": "2023-09-14T11:51:29Z",
					"instruction": "CMD [\"/bin/sh\" \"-c\" \"echo \\\"Hello world\\\"\"]"
				}
			],
			"scanTime": "2023-09-26T03:39:31.441509538Z"
		}
	],
	"consoleURL": "https://app.eu.prismacloud.io/compute?computeState=/monitor/vulnerabilities/images/ci?search=sha256%3Ae037c85776161a903e6132dbf49c38aca7c75bf311c742e4c39a8ce37d2baf0f"
}